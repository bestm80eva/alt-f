--- linux-2.6.35.14/arch/arm/kernel/setup.c-orig	2012-08-01 19:31:54.000000000 +0100
+++ linux-2.6.35.14/arch/arm/kernel/setup.c	2012-08-03 20:05:04.000000000 +0100
@@ -593,15 +593,56 @@
 
 __tagtable(ATAG_REVISION, parse_tag_revision);
 
-#ifndef CONFIG_CMDLINE_FORCE
 static int __init parse_tag_cmdline(const struct tag *tag)
 {
+#if defined(CONFIG_CMDLINE_EXTEND)
+
+/*
+uboot: root=/dev/ram console=ttyS0,115200 :::DB88FXX81:egiga0:none
+kernel default: root=/dev/mtdblock3 squashmtd
+
+after reset append kdef to cmdline:
+	root=/dev/ram console=ttyS0,115200 + root=/dev/mtdblock3 squashmtd
+for kexec overwrite (!) kdef with cmdline, e.g.,
+	!console=ttyS0,115200 
+
+if (tag->u.cmdline.cmdline[0] == '+') { // append cmdline to kernel default 
+	strlcat(default_command_line, " ", COMMAND_LINE_SIZE);
+	strlcat(default_command_line, tag->u.cmdline.cmdline, COMMAND_LINE_SIZE);
+} else if (tag->u.cmdline.cmdline[0] == '-') { // prepend 
+	char tmp[COMMAND_LINE_SIZE];
+	strlcpy(tmp, default_command_line, COMMAND_LINE_SIZE);
 	strlcpy(default_command_line, tag->u.cmdline.cmdline, COMMAND_LINE_SIZE);
-	return 0;
+	strlcat(default_command_line, " ", COMMAND_LINE_SIZE);
+	strlcat(default_command_line, tmp, COMMAND_LINE_SIZE);
+}
+*/
+
+if (tag->u.cmdline.cmdline[0] == '!') /* override kernel def with cmdline*/
+	strlcpy(default_command_line, tag->u.cmdline.cmdline + 1, COMMAND_LINE_SIZE);
+else { /* append kernel def to cmdline */ 
+	char tmp[COMMAND_LINE_SIZE];
+	strlcpy(tmp, default_command_line, COMMAND_LINE_SIZE);
+	strlcpy(default_command_line, tag->u.cmdline.cmdline, COMMAND_LINE_SIZE);
+	strlcat(default_command_line, " ", COMMAND_LINE_SIZE);
+	strlcat(default_command_line, tmp, COMMAND_LINE_SIZE);
 }
 
+/*
+original:
+	strlcat(default_command_line, " ", COMMAND_LINE_SIZE);
+	strlcat(default_command_line, tag->u.cmdline.cmdline, COMMAND_LINE_SIZE);
+*/
+
+#elif defined(CONFIG_CMDLINE_FORCE)
+	pr_warning("Ignoring tag cmdline (using the default kernel command line)\n");
+#else
+	strlcpy(default_command_line, tag->u.cmdline.cmdline, COMMAND_LINE_SIZE);
+#endif
+	return 0;
+ }
+ 
 __tagtable(ATAG_CMDLINE, parse_tag_cmdline);
-#endif /* CONFIG_CMDLINE_FORCE */
 
 /*
  * Scan the tag table for this tag, and call its parse function.
--- linux-2.6.35.14/arch/arm/Kconfig-orig	2012-08-02 19:33:47.000000000 +0100
+++ linux-2.6.35.14/arch/arm/Kconfig	2012-08-03 20:04:19.000000000 +0100
@@ -1433,16 +1433,28 @@
 	  time by entering them here. As a minimum, you should specify the
 	  memory size and the root device (e.g., mem=64M root=/dev/nfs).
 
+choice
+	prompt "Kernel command line type" if CMDLINE != ""
+	default CMDLINE_FROM_BOOTLOADER
+
+config CMDLINE_EXTEND
+	bool "Extend bootloader kernel arguments"
+	help
+	   The default kernel command string will be appended to 
+	   the command-line arguments provided by the boot loader.
+	   If the command-line starts with a '!', the default kernel command
+	   string will be ignore and only the command-line (without the '!')
+	   will be used.
+
 config CMDLINE_FORCE
 	bool "Always use the default kernel command string"
-	depends on CMDLINE != ""
 	help
 	  Always use the default kernel command string, even if the boot
 	  loader passes other arguments to the kernel.
 	  This is useful if you cannot or don't want to change the
 	  command-line options your boot loader passes to the kernel.
 
-	  If unsure, say N.
+endchoice
 
 config XIP_KERNEL
 	bool "Kernel Execute-In-Place from ROM"
