#!/bin/sh

exec >& /dev/console

echo "rcE: Starting reboot/shutdown"

board=$(cat /tmp/board)

echo "rcE: stopping all services"
# Stop all executable init scripts in /etc/init.d
# executing them in reverse numerical order.
rcall stop

echo "rcE: saving date and time to RTC"
# write system time to RTC, waiting for second change
if test $board = "DNS-320L-A1"; then
	echo -e 'systohc\r' | nc local:/var/run/dns320l.socket
else
	i=0; o="$(date +%s)"
	while test "$o" = "$(date +%s)" -a "$i" -lt 200; do i=$((i+1)); done
	hwclock -wu
fi

# wait for services to stop
sleep 5

# force kill resilient processes
killall5 -KILL

sleep 1

if aufs.sh -s >& /dev/null ; then
	echo "rcE: unmounting aufs"
	if aufs.sh -l | grep -q /rootmnt/sqimage; then
		mount -o remount,del=/rootmnt/sqimage /
	fi
	aufs.sh -u
fi

if mount -t squashfs | grep -q /rootmnt/sqimage; then
	echo "rcE: unmounting sqimage"
	umount /rootmnt/sqimage
fi

echo "rcE: unmounting all mounted filesystems"
for i in nfs cifs iso9660 davfs ext2 ext3 ext4 vfat ntfs; do
		umount -t $i -rf -a 
done

echo "rcE: stopping RAID"
for i in /dev/md[0-9]; do
  if test -b $i; then
	mdadm --stop $i
  fi
done

echo "rcE: unmouting tmpfs /tmp"
umount /tmp

echo "rcE: stopping swap"
for i in $(cat /proc/swaps | grep -o '/dev/.* '); do
	swapoff $i
done

echo "rcE: ejecting all drives"
# umount attached disks/partitions, simulating kernel hotplug events
# hot.sh removes branch from aufs (if dir /Alt-F belongs to device)
# just a last resort, as this is already done above
for i in /dev/sd[a-z]; do
  if test -b $i; then
	eject $(basename $i)
  fi
done

echo "rcE: still mounted filesystems"
echo "------------------------------"
mount
echo "------------------------------"

echo "rcE: bringing network down"
ifconfig eth0 down

# do a kexec to a new kernel/rootfs instead of a reboot
if test -f /root/zImage -o -f /root/rootfs.arm.*; then
	cd /root

	# no kernel image, use flashed kernel
	if ! test -f zImage -o "$board" = "DNS-320-A1A2" -o "$board" = "DNS-320L-A1" -o "$board" = "DNS-325-A1A2"; then
		dd if=/dev/mtdblock2 of=zImage bs=64 skip=1
	fi
	
	initrfs=$(ls rootfs.arm.*)
	# no rootfs, use flashed rootfs
	if ! test -f "$initrfs" -o "$board" = "DNS-320-A1A2" "$board" = "DNS-320L-A1" -o "$board" = "DNS-325-A1A2"; then
		dd if=/dev/mtdblock3 of=rootfs.arm.sqmtd bs=64 skip=1
		initrfs=rootfs.arm.sqmtd
	fi
	
	if test -s "cmdline"; then
		cmdline=$(cat cmdline);
	elif test "$initrfs" = "rootfs.arm.cpio-sq.lzma"; then
		cmdline="console=ttyS0,115200 squashcpio"
	else # squashrd
		cmdline="console=ttyS0,115200 root=/dev/ram0 init=/init"
	fi

	if test -s zImage -a -n "$initrfs"; then
		mount / -o remount,ro
		echo "rcE: starting a new kernel and root filesystem"
		kexec -l zImage --command-line="$cmdline" --initrd="$initrfs" --atags && kexec -e
	fi
fi

mount / -o remount,ro
echo "rcE: Poweroff NOW!"

if test "$board" = "DNS-320L-A1"; then
	echo -e 'DeviceShutdown\r' | nc local:/var/run/dns320l.socket # has the daemon survived till this point?
fi
