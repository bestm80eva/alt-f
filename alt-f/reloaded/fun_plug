#!/bin/sh

# Tested with D-Link firmware 1.10, dated 4/6/2011
#
# This script uses fonz's "reloaded" kernel module.
#
# "reloaded" is very sensitive to memory condition, specially low and fragmented memory.
# If it fails, try again after removing all D-Link addons and
# disabling all servers such as iTunes, UPnP AV and ftp.
# Stopping the BT client, DDNS client, LLTD, etc might also help.
#
# The file "alt-f-reloaded.log" might be useful for diagnosing,
# specially the free: section. Look near the file end.
#
# With all services enabled and a medium set of multimedia files available,
# "reloaded" failed for me once every two or three attempts, "free" reporting about 10MB.
#
# With all services disabled, "reloaded" never failed, with "free" reporting about 30MB.
#
# Alt-F is now mature enough to be flashed using D-Link "Firmware Upgrade" page.
# The risk of something goes wrong is the same as upgrading the D-Link firmware itself.

# disable recurring reboots,
# comment if you want to go to Alt-F on every reboot
ONCE=yes 

# let the kernel initialize the network
# comment if you want Alt-F to do it
KIP=yes

TMP_DIR=/tmp
BASE_DIR=/mnt/HD_a2
ALTF_DIR=alt-f
ALTF_PATH=$BASE_DIR/alt-f
ALTF_TARBALL=$BASE_DIR/Alt-F-*.tar
FFPRC=/ffp/etc/rc
LOG_FILE=alt-f-reloaded.log
FAILS=alt-f.fail

exec > $TMP_DIR/$LOG_FILE 2>&1

savelog() {
	if test -f $BASE_DIR/$FAILS; then
		cat $TMP_DIR/$LOG_FILE >> $BASE_DIR/$LOG_FILE
		rm $TMP_DIR/$LOG_FILE
	else
		mv $TMP_DIR/$LOG_FILE $BASE_DIR/$LOG_FILE
	fi
	# allow everybody to remove the log file
	chmod 666 $BASE_DIR/$LOG_FILE
}

lexit() {
	echo "$1, exiting."
	savelog
	exit 1
}

check() {
	if ! test -r "$1" -o -d "$1"; then
		lexit "$1 not found"
	fi
}

killallbutme() {
	fpchk=$(pidof chk_fun_plug)
	for i in $(ps | sed -n 's/[[:space:]]*\([[:digit:]]*\).*/\1/p'); do
		if test $i -gt 1000 -a $i != $$ -a $i != $$PID -a $i != "$fpchk"; then
			if kill -0 $i; then kill $1 $i; fi
		fi
	done
}

echo -e "\n********************************
$(date)
********************************\n"

check $BASE_DIR
cd $BASE_DIR

# allow everybody to remove this file
chmod a+w fun_plug

if test -f $FAILS; then # failsafe -- last reloaded failed?
	lexit "Last reload failed, remove \"$FAILS\" to try again"
fi

if ! test -x fun_plug; then
	lexit "The fun_plug file is not executable.
If you want to continue using Alt-F, make the fun_plug file executable,
then edit it and comment the top \"ONCE=yes\" line"
fi

# disable recurring reboots
if test "$ONCE" = "yes"; then
	chmod -x fun_plug
fi

if test -r $ALTF_TARBALL; then
	rm -rf $ALTF_PATH
	mkdir -p $ALTF_PATH
	check $ALTF_PATH
	# what the heck?! -x doesn't work, but -v does, so extract to stdout!
	for i in $(tar -tf $ALTF_TARBALL); do
		if ! test -d $i; then
			tar -xOf $ALTF_TARBALL $i > $i
		fi
	done

	rm $ALTF_TARBALL
	# allow everybody to remove created files
	chmod -R 666 alt-f
	chmod 777 alt-f
fi

check $ALTF_PATH
cd $ALTF_PATH

KV=$(uname -r)
kernel=zImage
machtype=1542
initrd=$(ls rootfs.arm.*)
cmdline="! console=ttyS0,115200 root=/dev/ram0 init=/init"

check "$kernel"
check "$initrd"
check "reloaded-$KV.ko"

if test "$KIP" = "yes"; then
	eval $(ifconfig egiga0 | sed -n '/inet addr/s/[a-zA-Z: ]*\([0-9.]*\)[a-zA-Z: ]*\([0-9.]*\)[a-zA-Z: ]*\([0-9.]*\)/ip=\1; bcast=\2; mask=\3/p')

	eval $(route -n | sed -n '/^0.0.0.0/s/[0-9.]* *\([0-9.]*\) .*/gw=\1/p')

	eval $(sed -n '/workgroup/s/.* = \(.*$\)/domain=\1/p' /etc/samba/smb.conf)

	cmdline="$cmdline ip=$ip::$gw:$mask:$(hostname).$domain:eth0:none"
fi

echo -e "\nps before: "; ps

# stop ffp services
if test -f $FFPRC; then
	echo "Stopping ffp services."
	$FFPRC stop
fi

if true; then # new way
	kill_running_process

	killallbutme -15
	sleep 3
	killallbutme -9

else # old way
	# stop processes
	smb stop
	proc="apkg atd crond wget smbclient pure-ftpd prescan upnp udhcpc \
		mt-daapd lpd inotify_itune inotify_upnp btdog bt op_server \
		inotifybt UpdateDB check_hotplug xmldb check_daemon mserver \
		mDNSResponder openssl webs chkbutton"

	for i in $proc; do
		if test -n "$(pidof $i)"; then
			kill -15 $(pidof $i)
		fi
	done
	sleep 3
	for i in $proc; do
		if test -n "$(pidof $i)"; then
			kill -9 $(pidof $i)
		fi
	done
	kill_running_process
fi

# try to solve network problems in rev-C1 boards
ifconfig egiga0 down

# free some more memory
rmmod usblp lltd

sleep 3
echo -e "\nset: "; set
echo -e "\ncwd: "; pwd
echo -e "\nps: "; ps
echo -e "\nfree: " ;free
echo -e "\nmount: "; mount
echo -e "\ndf: "; df -h
echo -e "\nlsmod: "; lsmod

savelog

# Alt-F will remove it if boot succeeds, else next reboot will be aborted
touch $BASE_DIR/$FAILS

# unmount filesystems
swapoff -a
sync
umount -a -r
sleep 3

# boot
insmod reloaded-$KV.ko machtype=$machtype kernel=$kernel initrd=$initrd cmdline=\"$cmdline\"

echo "Reload failed, rebooting"

reboot
