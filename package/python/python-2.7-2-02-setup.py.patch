--- Python-2.7.2/setup.py-orig	2014-04-26 19:00:16.022814363 +0100
+++ Python-2.7.2/setup.py	2014-04-26 19:09:50.863587636 +0100
@@ -21,7 +21,10 @@
 COMPILED_WITH_PYDEBUG = hasattr(sys, 'gettotalrefcount')
 
 # This global variable is used to hold the list of modules to be disabled.
-disabled_module_list = []
+try:
+    disabled_module_list = os.environ["PYTHON_DISABLE_MODULES"].split() 
+except KeyError:
+    disabled_module_list = [] 
 
 def add_dir_to_list(dirlist, dir):
     """Add the directory 'dir' to the list 'dirlist' (at the front) if
@@ -377,12 +380,18 @@
             os.unlink(tmpfile)
 
     def detect_modules(self):
-        # Ensure that /usr/local is always used
         if not self.cross_compile:
+            # Ensure that /usr/local is always used
             add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib')
             add_dir_to_list(self.compiler.include_dirs, '/usr/local/include')
             self.add_multiarch_paths()
-
+        
+        if os.getenv('PYTHON_MODULES_INCLUDE'):
+            add_dir_to_list(self.compiler.include_dirs, os.getenv('PYTHON_MODULES_INCLUDE'))
+        if os.getenv('PYTHON_MODULES_LIB'):
+            for item in os.getenv('PYTHON_MODULES_LIB').split():
+                add_dir_to_list(self.compiler.library_dirs, item)
+        
         # Add paths specified in the environment variables LDFLAGS and
         # CPPFLAGS for header and library files.
         # We must get the values from the Makefile and not the environment
@@ -993,6 +1002,12 @@
                 print "bsddb lib dir:", dblib_dir, " inc dir:", db_incdir
             db_incs = [db_incdir]
             dblibs = [dblib]
+
+            if self.cross_compile:
+                bsddb_runtime_library_dir = None
+            else:
+                bsddb_runtime_library_dir = dblib_dir
+
             # We add the runtime_library_dirs argument because the
             # BerkeleyDB lib we're linking against often isn't in the
             # system dynamic library search path.  This is usually
@@ -1002,7 +1017,7 @@
             exts.append(Extension('_bsddb', ['_bsddb.c'],
                                   depends = ['bsddb.h'],
                                   library_dirs=dblib_dir,
-                                  runtime_library_dirs=dblib_dir,
+                                  runtime_library_dirs=bsddb_runtime_library_dir,
                                   include_dirs=db_incs,
                                   libraries=dblibs))
         else:
@@ -1105,12 +1120,17 @@
             else:
                 sqlite_extra_link_args = ()
 
+            if self.cross_compile:
+                sqlite_runtime_library_dirs = None
+            else:
+                sqlite_runtime_library_dirs = sqlite_libdir
+
             exts.append(Extension('_sqlite3', sqlite_srcs,
                                   define_macros=sqlite_defines,
                                   include_dirs=["Modules/_sqlite",
                                                 sqlite_incdir],
                                   library_dirs=sqlite_libdir,
-                                  runtime_library_dirs=sqlite_libdir,
+                                  runtime_library_dirs=sqlite_runtime_library_dirs,
                                   extra_link_args=sqlite_extra_link_args,
                                   libraries=["sqlite3",]))
         else:
@@ -1209,9 +1229,13 @@
                 elif cand == "bdb":
                     if db_incs is not None:
                         print "building dbm using bdb"
+                        if self.cross_compile:
+                            db_runtime_library_dir = None
+                        else:
+                            db_runtime_library_dir = dblib_dir
                         dbmext = Extension('dbm', ['dbmmodule.c'],
                                            library_dirs=dblib_dir,
-                                           runtime_library_dirs=dblib_dir,
+                                           runtime_library_dirs=db_runtime_library_dir,
                                            include_dirs=db_incs,
                                            define_macros=[
                                                ('HAVE_BERKDB_H', None),
